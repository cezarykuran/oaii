% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/df.R
\name{df_col_dt_format}
\alias{df_col_dt_format}
\title{Replace unix timestamp column(s) to formated dt string}
\usage{
df_col_dt_format(
  df,
  col,
  format = "\%Y-\%m-\%d \%H:\%M:\%S",
  tz = "",
  on_missing_col = "warn"
)
}
\arguments{
\item{df}{data.frame, input data.frame}

\item{col}{character vector, column names of the df that will be modified}

\item{format}{A character string.  The default for the \code{format}
    methods is
    \code{"\%Y-\%m-\%d \%H:\%M:\%S"} if any element has a time
    component which is not midnight, and \code{"\%Y-\%m-\%d"}
    otherwise.  If \code{\link[base]{options}("digits.secs")} is set, up to
    the specified number of digits will be printed for seconds.}

\item{tz}{A character string specifying the time zone to be used for
    the conversion.  System-specific (see \code{\link[base]{as.POSIXlt}}), but
    \code{""} is the current time zone, and \code{"GMT"} is UTC.
    Invalid values are most commonly treated as UTC, on some platforms with
    a warning.}

\item{on_missing_col}{string, behavior for missing column(s):
"warn" - log warning, "skip" - skip missing column(s), "stop" - throw error}
}
\value{
Modified input data.frame
}
\description{
Replace unix timestamp column(s) to formated dt string
}
\examples{
df <- data.frame(
  x = c("a", "b"),
  dt = c(1687868601, 1688417643)
)
df_col_dt_format(df, "dt")
df_col_dt_format(df, "dt", "\%H:\%M")

}
